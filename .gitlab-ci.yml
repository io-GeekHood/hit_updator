stages:
    - start
    - build
    - report

docker-build:
    image: docker:latest
    stage: build
    services:
        - docker:dind
    before_script:
        - docker login -u "$CI_DOCKER_REGISTRY_USER" -p "$CI_DOCKER_REGISTRY_PASSWORD" $CI_DOCKER_REGISTRY
        - docker pull "$CI_DOCKER_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_NAME" || true
    script:
        - docker build --cache-from "$CI_DOCKER_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_NAME" -t "$CI_DOCKER_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_NAME" --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN .
        - docker push "$CI_DOCKER_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_NAME"

report-start:
    image: frox/alpine:curl
    stage: start
    script:
        - printenv | tr '\n' '&' | curl "https://ci.frox.ir/ci/start" -d @-
    when: on_success

report-success:
    image: frox/alpine:curl
    stage: report
    script:
        - printenv | tr '\n' '&' | curl "https://ci.frox.ir/ci/success" -d @-
    when: on_success

report-failure:
    image: frox/alpine:curl
    stage: report
    script:
        - printenv | tr '\n' '&' | curl "https://ci.frox.ir/ci/fail" -d @-
    when: on_failure

